# -*- coding: utf-8 -*-
"""ChatGPT_App.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eYtWzoyIGx1i0-qugD4yusjzpVm1xDG8
"""
import openai
import streamlit as st
from streamlit_chat import message
import pandas as pd
import os 
# from dotenv import load_dotenv
# load_dotenv('api_key.env')
openai.api_key = "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"
def generate_response(prompt):
    completion=openai.Completion.create(
        engine='text-davinci-003',
        prompt=prompt,
        max_tokens=1024,
        n=1,
        stop=None,
        temperature=0.6,
    )
    message=completion.choices[0].text
    return message


        
import plotly.express as px
st.write('# MDC Classroom Assistant')  #st.title('Avocado Prices dashboard')
# https://markdown-editor.github.io/   This will help build markdown
tab1, tab2 = st.tabs(["Tab 1", "Tab2"])
with tab1:
    st.radio('Select one:', [1, 2])
with tab2:
    st.title("ChatGPT-like Web App")
    #storing the chat
    if 'generated' not in st.session_state:
        st.session_state['generated'] = []
    if 'past' not in st.session_state:
        st.session_state['past'] = []
    user_input=st.text_input("You:",key='input')
    if user_input:
        output=generate_response(user_input)
        #store the output
        st.session_state['past'].append(user_input)
        st.session_state['generated'].append(output)
    if st.session_state['generated']:
        for i in range(len(st.session_state['generated'])-1, -1, -1):
            message(st.session_state["generated"][i], key=str(i))
            message(st.session_state['past'][i], is_user=True, key=str(i) + '_user')
st.markdown('''
This is a dashboard showing the *average prices* of different types of :avocado:  
Data source: [Kaggle](https://www.kaggle.com/datasets/timmate/avocado-prices-2020)
''')
st.header('Summary statistics')
st.header('Line chart by geographies')
st.header('Summary statistics')
avocado = pd.read_csv('https://raw.githubusercontent.com/fenago/datasets/main/avocado-updated-2020.csv')
avocado_stats = avocado.groupby('type')['average_price'].mean()
st.dataframe(avocado_stats)
st.header('Line chart by geographies')
line_fig = px.line(avocado[avocado['geography'] == 'Los Angeles'],
                   x='date', y='average_price',
                   color='type',
                   title='Avocado Prices in Los Angeles')
st.plotly_chart(line_fig)
selected_geography = st.selectbox(label='Geography', options=avocado['geography'].unique())
submitted = st.button('Submit')
if submitted:
    filtered_avocado = avocado[avocado['geography'] == selected_geography]
    line_fig = px.line(filtered_avocado,
                       x='date', y='average_price',
                       color='type',
                       title=f'Avocado Prices in {selected_geography}')
    st.plotly_chart(line_fig)

with st.form('line_chart'):
    selected_geography = st.selectbox(label='Geography', options=avocado['geography'].unique())
    submitted = st.form_submit_button('Submit')
    if submitted:
        filtered_avocado = avocado[avocado['geography'] == selected_geography]
        line_fig = px.line(filtered_avocado,
                           x='date', y='average_price',
                           color='type',
                           title=f'Avocado Prices in {selected_geography}')
        st.plotly_chart(line_fig)

with st.sidebar:
    st.subheader('About')
    st.markdown('Data Analytics Assistant:  Miami Dade College')
        
st.sidebar.image('https://clipground.com/images/miami-dade-college-logo-7.png', width=50)

@st.cache
def load_data(path):
    dataset = pd.read_csv(path)
    return dataset
avocado = load_data('https://raw.githubusercontent.com/fenago/datasets/main/avocado-updated-2020.csv')

# display dataframe as a table
df = pd.read_csv('https://raw.githubusercontent.com/fenago/datasets/main/avocado-updated-2020.csv')
st.dataframe(df)

